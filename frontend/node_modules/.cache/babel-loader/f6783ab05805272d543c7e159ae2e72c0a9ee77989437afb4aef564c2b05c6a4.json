{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrzej\\\\Desktop\\\\Andrzej Haus\\\\Nauka\\\\Programowanko\\\\frontend\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\nimport logo from '../img/logo.svg';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Użyj useNavigate zamiast useHistory\nimport '../css/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const navigate = useNavigate(); // Użyj useNavigate zamiast useHistory\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    confirmedPassword: '',\n    name: '',\n    surname: '',\n    phone: ''\n  });\n  const [messages, setMessages] = useState([]);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Check if password and confirmedPassword match\n    if (formData.password !== formData.confirmedPassword) {\n      setMessages(['Password and confirmed password do not match']);\n      return;\n    }\n    const response = await fetch('http://localhost:8000/register/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    });\n    const data = await response.json();\n    if (!response.ok) {\n      // Handle errors\n      setMessages([data.message || 'Registration failed']);\n    } else {\n      // Successful registration logic here\n      setMessages(['Registration successful']);\n\n      // Redirect to the specified URL after successful registration\n      navigate('/projects');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"corkCulture\",\n        src: logo,\n        alt: \"Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"login\",\n        onSubmit: handleSubmit,\n        children: [messages.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages\",\n          children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: message\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"hell\",\n          name: \"email\",\n          type: \"text\",\n          placeholder: \"email@email.com\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"hell\",\n          name: \"password\",\n          type: \"password\",\n          placeholder: \"password\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"hell\",\n          name: \"confirmedPassword\",\n          type: \"password\",\n          placeholder: \"confirm password\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"hell\",\n          name: \"name\",\n          type: \"text\",\n          placeholder: \"name\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"hell\",\n          name: \"surname\",\n          type: \"text\",\n          placeholder: \"surname\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"hell\",\n          name: \"phone\",\n          type: \"text\",\n          placeholder: \"phone\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"login-button\",\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"HpgHczcn3L4Yrej2fMoMZUVknCE=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["logo","React","useState","useNavigate","jsxDEV","_jsxDEV","Register","_s","navigate","formData","setFormData","email","password","confirmedPassword","name","surname","phone","messages","setMessages","handleChange","e","target","value","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","message","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","length","map","index","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Andrzej/Desktop/Andrzej Haus/Nauka/Programowanko/frontend/src/components/Register.js"],"sourcesContent":["\r\nimport logo from '../img/logo.svg';\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // Użyj useNavigate zamiast useHistory\r\nimport '../css/style.css';\r\n\r\nconst Register = () => {\r\n    const navigate = useNavigate(); // Użyj useNavigate zamiast useHistory\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: '',\r\n        confirmedPassword: '',\r\n        name: '',\r\n        surname: '',\r\n        phone: ''\r\n    });\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Check if password and confirmedPassword match\r\n        if (formData.password !== formData.confirmedPassword) {\r\n            setMessages(['Password and confirmed password do not match']);\r\n            return;\r\n        }\r\n\r\n        const response = await fetch('http://localhost:8000/register/', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(formData),\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        if (!response.ok) {\r\n            // Handle errors\r\n            setMessages([data.message || 'Registration failed']);\r\n        } else {\r\n            // Successful registration logic here\r\n            setMessages(['Registration successful']);\r\n\r\n            // Redirect to the specified URL after successful registration\r\n            navigate('/projects');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"logo\">\r\n                <img className=\"corkCulture\" src={logo} alt=\"Logo\" />\r\n            </div>\r\n            <div className=\"login-container\">\r\n                <form className=\"login\" onSubmit={handleSubmit}>\r\n                    {messages.length > 0 && (\r\n                        <div className=\"messages\">\r\n                            {messages.map((message, index) => (\r\n                                <p key={index}>{message}</p>\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n                    <input className=\"hell\" name=\"email\" type=\"text\" placeholder=\"email@email.com\" onChange={handleChange} />\r\n                    <input className=\"hell\" name=\"password\" type=\"password\" placeholder=\"password\" onChange={handleChange} />\r\n                    <input className=\"hell\" name=\"confirmedPassword\" type=\"password\" placeholder=\"confirm password\" onChange={handleChange} />\r\n                    <input className=\"hell\" name=\"name\" type=\"text\" placeholder=\"name\" onChange={handleChange} />\r\n                    <input className=\"hell\" name=\"surname\" type=\"text\" placeholder=\"surname\" onChange={handleChange} />\r\n                    <input className=\"hell\" name=\"phone\" type=\"text\" placeholder=\"phone\" onChange={handleChange} />\r\n                    <button className=\"login-button\" type=\"submit\">Register</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Register;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}